[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-factor-equity-alpha-engine"
description = "Production-quality Python framework for quantitative equity research with multi-factor modeling and machine learning"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Alpha Engine Team", email = "contact@alphaengine.com"}
]
maintainers = [
    {name = "Alpha Engine Team", email = "contact@alphaengine.com"}
]
keywords = [
    "quantitative-finance",
    "machine-learning", 
    "alpha-generation",
    "portfolio-optimization",
    "factor-modeling",
    "backtesting"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "scipy>=1.6.0",
    "yfinance>=0.1.70",
    "requests>=2.25.0",
    "scikit-learn>=1.0.0",
    "xgboost>=1.5.0",
    "tensorflow>=2.8.0",
    "PyPortfolioOpt>=1.5.0",
    "quantstats>=0.0.59",
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "PyYAML>=5.4.0",
    "joblib>=1.0.0"
]
dynamic = ["version"]

[project.optional-dependencies]
technical = ["TA-Lib>=0.4.25"]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.15.0"
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "plotly>=5.0.0"
]
web = ["streamlit>=1.10.0"]
all = [
    "multi-factor-equity-alpha-engine[technical,dev,jupyter,web]"
]

[project.urls]
Homepage = "https://github.com/your-username/multi-factor-equity-alpha-engine"
Documentation = "https://github.com/your-username/multi-factor-equity-alpha-engine#readme"
Repository = "https://github.com/your-username/multi-factor-equity-alpha-engine.git"
Issues = "https://github.com/your-username/multi-factor-equity-alpha-engine/issues"

[project.scripts]
alpha-engine = "run_pipeline:main"
alpha-train = "train:main"

[tool.setuptools]
packages = ["alpha_engine"]

[tool.setuptools_scm]
write_to = "alpha_engine/_version.py"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "talib.*", 
    "quantstats.*",
    "xgboost.*",
    "sklearn.*",
    "tensorflow.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests"
]

[tool.coverage.run]
source = ["alpha_engine"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    "build",
    "dist"
]
